## Simple example of an operator in a tie subgoal
## will just create symbolic evaluation such as best, worst

sp {Impasse__Operator_Tie*propose*evaluate-operator
   (state <s> ^name Impasse__Operator_Tie
              ^evaluation <x>)
  -(<x> ^value)
-->
   (<s> ^operator <op> + =)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
}

sp {apply*evaluate-operator*none
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator none)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
-->
   (<x> ^value equal)
}

sp {apply*evaluate-operator*pour*after-fill-empty
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator << empty fill >>)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
   (<x> ^super-operator.name pour)
-->
   (<x> ^value best)
}

sp {apply*evaluate-operator*pour*after-pour
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator pour)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
   (<x> ^super-operator.name pour)
-->
   (<x> ^value worst)
}

sp {apply*evaluate-operator*fill-empty*after-empty-fill
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator << empty fill >>)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
   (<x> ^super-operator.name << fill empty >>)
-->
   (<x> ^value worst)
}

sp {apply*evaluate-operator*fill-empty*after-pour
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator pour)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
   (<x> ^super-operator.name << fill empty >>)
-->
   (<x> ^value equal)
}
