# water-jug-look-ahead
# John E. Laird
# University of Michigan
# May 24, 2005
# latest version 1/27/2017
# Soar version 9.6.0

###
### ABSTRACT. These Soar productions implement the water-jug task.
### The task is to find the sequence of steps that fill the three gallon 
### jug with one gallon of water.  There are a well that has an infinite
### amount of water, a five gallon jug, and a three gallon jug.
###

###
### DESCRIPTION. The task problem space has three operators: empty, 
### fill, and pour. Empty empties a jug into the well. Fill fills up
### a jug from the well. Pour pours some or all of the contents
### from one jug into the other jug. Pour can only pour out the contents 
### of the jug until the source is empty or the destination is full.
### State Structure: Each jug has slots to record its capacity [volume],
### the amount of water it contains [contents], and the capacity 
### available [empty] which is the volume minus the contents (computed
### in elaborations/empty). Example:
###   (state s1 ^jug j1)
###   (jug j1 ^volume 5 ^contents 3 ^empty 2)
###

### This uses the look-ahead code that is in default/selection.soar
### Thus, search is done through subgoals.
### Chunking learns control rules for selecting operators.
###  Sometimes it can learn rules that lead to looping.

# Change made to water-jug to enable look ahead search:
# 1. Add to _firstload "source selection.soar"
# 2. Add to elaborations/problem-space: water-jug*elaborate*problem-space
# 3. Change elaborations/goal-test so works with look-ahead goal test = 
# 4. Add to elaborations/goal-test a test for failure on look-ahead if duplicate states.
# 5. Add to initialize a desired jug structure so easier to detect desired state (and to change).
# 6. Remove = preferences from operator proposals in empty.soar, fill.soar, pour.soar
# 7. Add to impasse__operator_tie monitoring rules.


